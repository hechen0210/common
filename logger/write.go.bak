/**
@Time : 2019/11/18 15:38
@Author : hechen
@File : write
@Software: GoLand
*/
package logger

import (
	"common/helper"
	"encoding/json"
	"log"
	"os"
	"strings"
)

/**
设置基本信息，每条记录都会带
*/
func (l *Logger) SetBase(content string) *Logger {
	l.Base = content
	return l
}

/**
写记录
*/
func (l *Logger) Write(content string) {
	write(l.setFile(l.CurrentFile), l.setContent(content))
}

/**
写json记录
*/
func (l *Logger) WriteJson(content interface{}) {
	_content, _ := json.Marshal(content)
	l.Write(string(_content))
}

/**
写入信息日志
*/
func (l *Logger) AddInfo(content string) {
	currentFile := l.getFileNameByType(Info)
	write(l.setFile(currentFile), l.setContent(content))
}

/**
写入错误日志
*/
func (l *Logger) AddError(content string) {
	currentFile := l.getFileNameByType(Info)
	write(l.setFile(currentFile), l.setContent(content))
}

/**
写入警告
*/
func (l *Logger) AddWarning(content string) {
	currentFile := l.getFileNameByType(Info)
	write(l.setFile(currentFile), l.setContent(content))
}

/**
修改日志类型
*/
func (l *Logger) ChangeType(logType string) {
	l.LogType = logType
	l.CurrentFile = l.getFileNameByType(logType)
}

/**
获取文件名
*/
func (l *Logger) getFileNameByType(logType string) string {
	baseName, ext := getFileName(l.CurrentFile)
	_baseName := strings.Split(baseName, "_")
	_baseName[1] = logType
	return strings.Join(_baseName, "_") + ext
}

/**
设置写入文件
*/
func (l *Logger) setFile(fileName string) string {
	return l.CurrentPath + "/" + fileName
}

func (l *Logger) setContent(content string) string {
	return l.Base + content
}

/**
内容写入文件
*/
func write(fileName, content string) {
	if helper.FileExist(fileName) {
		err := createFile(fileName)
		if err != nil {

		}
	}
	file, _ := os.OpenFile(fileName, os.O_APPEND|os.O_WRONLY, 0666)
	defer file.Close()
	logFile := log.New(file, "", log.LstdFlags|log.Lshortfile)
	logFile.Println(content)
}
